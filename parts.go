package invaders

type Mask [Height][Width]int

func (mask Mask) At(r, c int) int {
	return mask[r][c]
}

func (mask *Mask) Overlay(other Mask) {
	for r := range mask {
		for c := range mask {
			if mask[r][c] == -1 {
				continue
			}

			if other[r][c] == 0 {
				continue
			}

			mask[r][c] = other[r][c]
		}
	}
}

var Antennas = []Mask{
	{ // 1 short
		{},
		{},
		{0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0},
	},
	{ // 1 long
		{},
		{0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0},
	},
	{ // 2 short
		{},
		{},
		{0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0},
	},
	{ // 2 long
		{},
		{0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0},
		{0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0},
	},
	{ // 3 short
		{},
		{},
		{0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0},
	},
	{ // 3 long
		{},
		{0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0},
		{0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0},
	},
	{ // dome
		{},
		{0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0},
		{0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0},
	},
}

var Bodies = []Mask{
	{ // narrow
		{},
		{},
		{},
		{0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0},
		{0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0},
		{0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0},
	},
	{ // wide
		{},
		{},
		{},
		{0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0},
		{0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0},
		{0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0},
	},
	{ // angled (remove arms) - pairs well with dome
		{},
		{},
		{-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1},
		{-1, 0, 1, 1, 1, 1, 1, 1, 1, 0, -1},
		{-1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1},
		{-1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1},
		{-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1},
		{-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1},
	},
}

var Eyes = []Mask{
	{ // two dots, far apart
		{},
		{},
		{},
		{0, 0, 0, +1, 0, 0, 0, +1, 0, 0, 0},
		{0, 0, 1, -1, 1, 1, 1, -1, 1, 0, 0},
		{0, 0, 0, +1, 0, 0, 0, +1, 0, 0, 0},
	},
	{ // two dots, close together
		{},
		{},
		{},
		{0, 0, 0, 0, +1, 0, +1, 0, 0, 0, 0},
		{0, 0, 0, 1, -1, 1, -1, 1, 0, 0, 0},
		{0, 0, 0, 1, +1, 0, +1, 0, 0, 0, 0},
	},
	{ // tall eyes
		{},
		{},
		{},
		{0, 0, 0, +1, 0, 0, 0, +1, 0, 0, 0},
		{0, 0, 1, -1, 1, 1, 1, -1, 1, 0, 0},
		{0, 0, 1, -1, 1, 1, 1, -1, 1, 0, 0},
		{0, 0, 0, +1, 1, 1, 1, +1, 0, 0, 0},
	},
	{ // two slits
		{},
		{},
		{},
		{0, 0, 0, +1, +1, 0, +1, +1, 0, 0, 0},
		{0, 0, 1, -1, -1, 1, -1, -1, 1, 0, 0},
		{0, 0, 0, +1, +1, 0, +1, +1, 0, 0, 0},
	},
}

var Arms = []Mask{
	{}, // higher chance of having no arms
	{},
	{},
	{},
	{ // down
		{},
		{},
		{},
		{},
		{0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0},
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
		{1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
		{1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
		{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	},
	{ // up
		{},
		{},
		{1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
		{1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
		{0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0},
	},
}

var Legs = []Mask{
	{ // grabbers
		{},
		{},
		{},
		{},
		{},
		{},
		{0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0},
		{0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0},
		{0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0},
	},
	{ // thicc grabbers
		{},
		{},
		{},
		{},
		{},
		{},
		{0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0},
		{0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0},
		{0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0},
	},
	{ // feelers
		{},
		{},
		{},
		{},
		{},
		{},
		{0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0},
		{0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0},
		{0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0},
	},
	{ // tentacles
		{},
		{},
		{},
		{},
		{},
		{},
		{0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0},
		{0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0},
		{0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0},
	},
	{ // mandibles
		{},
		{},
		{},
		{},
		{},
		{},
		{0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0},
		{0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0},
		{1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
	},
	{ // tendrils
		{},
		{},
		{},
		{},
		{},
		{},
		{0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0},
		{0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0},
		{0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0},
	},
	{ // teeny legs
		{},
		{},
		{},
		{},
		{},
		{},
		{0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0},
		{0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0},
		{0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0},
	},
	{ // wide legs
		{},
		{},
		{},
		{},
		{},
		{},
		{0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0},
		{0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0},
		{0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0},
	},
	{ // pac-man
		{},
		{},
		{},
		{},
		{0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0},
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
		{1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1},
	},
}
